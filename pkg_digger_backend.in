#!/bin/sh

# Copyright (c) 2010, Aleksey Cheusov <vle@gmx.net>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -e

. pipestatus

export LC_ALL=C

usage () {
    cat 1>&2 <<EOF
pkg_digger_backend is a pkg summary searcher
(backend for pkg_digger).
usage: pkg_digger_backend -h
       pkg_digger_backend -f
       pkg_digger_backend -s
       pkg_digger_backend [-n] fsq1 [fsq2 ...]
       pkg_digger_backend -1|-3|-9|-i [-r] [-q] pkgpair1 [pkgpair2...]
where pkgpair is <PKGPATH>,<PKGNAME>
and fsq is <field>:<strategy>:<query>
OPTIONS:
   -h         display this screen
   -s         display available search strategies
   -f         display available fields for search in
   -1         display 1-line information about packages (by PKGPAIR)
   -3         display short information about packages (by PKGPAIR)
   -9|-i      display full information about packages (by PKGPAIR)
   -r         raw output in pkg_summary(5) format
   -q         quiet mode, do not print "No matches found" to stderr
   -n <limit>    maximum number of results
EOF
}

if test -z "$PKG_DIGGER_SUMMARY"; then
    echo 'PKG_DIGGER_SUMMARY environment variable must be set' 1>&2
    exit 1
fi

if test $# -eq 0; then
    usage
    exit 2
fi

limit=1000000000

show_fields (){
    runawk -F= -f heapsort.awk -e '
	BEGIN {hash ["PKGBASE"] = hash ["PKGPATHe"] = ""
	       hash ["PKGPABA"] = hash ["PKGPANA"] = hash ["PKGPAIR"] = ""}
	NF > 0 {hash [$1]=0}
	END {cnt = heapsort_indices(hash, remap)
	     for (i=1; i <= cnt; ++i) {print remap [i]}}' \
	"$PKG_DIGGER_SUMMARY"
    exit 0
}

FIELDS_3='PKGNAME PKGPATH HOMEPAGE COMMENT MAINTAINER CATEGORIES DESCRIPTION'
FIELDS_9=''

while getopts hsf139irqn: f; do
    case "$f" in
	s)    pkg_grep_summary -T -T; exit 0;;
	f)    show_fields;;
	9|i)  info=1;;
	3)    shortinfo=1; FIELDS=-f`echo $FIELDS_3 | tr ' ' ,`;;
	1)    onelineinfo=1;;
	r)    raw_format=1;;
	q)    quiet_mode=1;;
	n)    limit=$OPTARG;;
	h)    usage; exit 0;;
	?)    printf "Run pkg_digger_backend -h for details\n"; exit 2;;
    esac
done

shift `expr $OPTIND - 1`

gen_summary4view (){
    if test -n "$raw_format"; then
	cat
    else
	pkg_summary4view
    fi
}

summary2onelineinfo (){
    awk -v quiet_mode="$quiet_mode" \
	'/^PKGNAME=/ {pkgbase = substr($0, 9); sub(/-[^-]*$/, "", pkgbase); next}
	/^PKGPATH=/ {pkgpath = substr($0, 9); next}
	/^COMMENT=/ {comment = substr($0, 9); next}
	NF == 0 {
	    pos = index(pkgpath, "/")
	    if (substr(pkgpath, pos+1) == pkgbase)
		printf "%-25s - %s\n", pkgpath, comment
	    else
		printf "%-25s - %s\n", pkgpath "(" pkgbase ")", comment
	    found = 1
	}
	END {
	    if (!found){
		if (!quiet_mode)
		    print "No matches found" > "/dev/stderr"
		exit 20
	    }
	}' "$@"
}

if test -n "$onelineinfo"; then
    # -1
    pkg_grep_summary -r -fPKGNAME,PKGPATH,COMMENT -i \
	    -t strlist PKGPAIR "$*" < "$PKG_DIGGER_SUMMARY" |
    summary2onelineinfo

    exit 0
elif test -n "${shortinfo}${info}"; then
    # -3|-9
    runpipe \
	pkg_grep_summary $FIELDS -r -i \
	    -t strlist PKGPAIR "$*" < "$PKG_DIGGER_SUMMARY" '|' \
	gen_summary4view
    if test "$pipestatus_1" != 0; then
	test "$quiet_mode" = 1 || echo 'No matches found' 1>&2
	exit 20
    fi

    exit 0
else
    # f:s:q
    tmp_dir=`mktemp -d /tmp/pkg_digger.XXXXXX`
    trap "rm -rf $tmp_dir $new_summary" 0 1 2 15

    cnt=1
    for i in "$@"; do
	if printf '%s\n' "$i" | grep ':.*:' > /dev/null; then
	    :
	else
	    echo "Invalid search pattern: '$i'," 1>&2
	    echo "   field:strategy:query is expected" 1>&2
	    exit 34
	fi

	field=`echo "$i" | cut -d: -f1`
	strat=`echo "$i" | cut -d: -f2`
	query=`echo "$i" | cut -d: -f3`
	pkg_grep_summary -fPKGNAME,PKGPATH,ASSIGNMENTS -i \
	    -t "$strat" "$field" "$query" < "$PKG_DIGGER_SUMMARY" > "$tmp_dir/$cnt" &
	cnt=$(($cnt+1))
    done
    wait 
    runawk -v quiet_mode="$quiet_mode" -v limit="$limit" \
	-e '
    /^PKGPATH=/ {
	pkgpath = substr($0, 9)
	sub(/:.*/, "", pkgpath)
	next
    }
    /^PKGNAME=/ {
	pkgbase = substr($0, 9)
	sub(/-[^-]*$/, "", pkgbase)
	next
    }
    NF == 0 {
	pkgpair = pkgpath "," pkgbase
	if (pkgpair in hash)
	    next
	hash [pkgpair] = 1
	print pkgpair
	found = 1
    }
    END {
	if (!found){
	    if (!quiet_mode)
		print "No matches found" > "/dev/stderr"
	    exit 20
	}
    }' "$tmp_dir"/*
    exit 0
fi
