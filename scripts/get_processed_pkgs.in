#!/usr/bin/env runawk

# Copyright (c) 2010-2015, Aleksey Cheusov <vle@gmx.net>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
#       copyright notice, this list of conditions and the following
#       disclaimer in the documentation and/or other materials provided
#       with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#env "LC_ALL=C"

#use "power_getopt.awk"

#.begin-str help
# Taking summaries on input this script outputs all possible
#    enriched PKGPATHs, i.e plain PKGPATHs,
#    PKGPATH:<good_assignments> and
#    PKGPATH:<good_assignments>,<bad_assignments> where
#    <good_assignments> are assignments from ASSIGMENTS, and
#    <bad_assignments> are rejected ones from _INHER_ASSIGNS_REJ.
# usage: get_process_pkgs [OPTIONS] [files...]
# OPTIONS:
#  -h       display this screen
#.end-str

BEGIN {
	if (getarg("h")){
		print_help()
		exitnow(0)
	}
}

NF == 0 {
	if (assigns != "")
		pkgpath = pkgpath ":" assigns
	print pkgpath

	if (assigns_rej != "")
		print pkgpath (assigns != "" ? "," : ":") assigns_rej

	pkgpath = assigns_rej = assigns = ""
	next
}

/^PKGPATH=/ {
	pkgpath = substr($0, 9)
	next
}

/^ASSIGNMENTS=/ {
	assigns = substr($0, 13)
	next
}

/^_INHER_ASSIGNS_REJ=/ {
	assigns_rej = substr($0, 20)
	next
}
