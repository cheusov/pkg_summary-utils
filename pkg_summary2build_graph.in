#!/usr/bin/env runawk

# Copyright (c) 2008-2009 Aleksey Cheusov <vle@gmx.net>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

############################################################

#env "LC_ALL=C"

#use "power_getopt.awk"
#use "alt_assert.awk"
#use "braceexpand.awk"

############################################################
#.begin-str help
# pkg_summary2build_graph - converts src_summary to build
#   dependency graph analysing {alter,native}:../../dep/endencies entries
#   in DEPENDS and BUILD_DEPENDS fields.
# Format of the output:
#   package1
#   package2 package3
#   ...
# Here package3 depends on package2, package1 has no dependencies.
# usage: pkg_summary2build_graph [OPTIONS] [files...]
# OPTIONS:
#   -h|--help            display this help
#.end-str
############################################################

/^ASSIGNMENTS=/ {
	assigns = substr($0, 13)
	next
}

/^PKGPATH=/ {
	pkgpath = substr($0, 9)
	next
}

NF == 0 {
	assert(pkgpath != "", "Cannot find pkgpath")

	if (assigns)
		pkgpath = pkgpath ":" assigns

	all_pkgs [pkgpath] = 1

	cnt = 0
	for (dep in deps){
		++cnt
		print dep, pkgpath
		dep_pkgs [dep] = 1
	}
	if (cnt)
		dep_pkgs [pkgpath] = 1

	delete deps

	assigns = pkgpath = ""
	next
}

/^DEPENDS=/ || /^BUILD_DEPENDS=/ {
	sub(/^[^=]+=/, "")

	for (i=1; i <= NF; ++i){
		if ($i ~ /[{]/){
			$i = braceexpand($i)
			sub(/ .*$/, "", $i)
		}
		sub(/^[^:]*:(..\/..\/)?/, "", $i)
		deps [$i] = 1
	}
}

END {
	for (pkgpath in all_pkgs){
		if (! (pkgpath in dep_pkgs)){
			print pkgpath
		}
	}

	exit ex
}
