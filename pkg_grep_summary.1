.\"	$NetBSD$
.\"
.\" Copyright (c) 2008 by Aleksey Cheusov (vle@gmx.net)
.\" Absolutely no warranty.
.\"
.\" ------------------------------------------------------------------
.de VB \" Verbatim Begin
.ft CW
.nf
.ne \\$1
..
.de VE \" Verbatim End
.ft R
.fi
..
.\" ------------------------------------------------------------------
.TH PKG_GREP_SUMMARY 1 "Jan 29, 2008" "" ""
.SH NAME
pkg_grep_summary \- tool for grepping pkgsrc summary file
.SH SYNOPSIS
.B "pkg_grep_summary -h"
.br
.BI pkg_grep_summary " field awk_expression"
.br
.BI "pkg_grep_summary -e" " field"
.br
.BI "pkg_grep_summary -m" " field regexp"
.br
.BI "pkg_grep_summary -s" " field string"
.br
.BI "pkg_grep_summary -S" " field filename"
.br
.SH DESCRIPTION
.B pkg_grep_summary
takes package summaries on stdin and
outputs those matching the specified condition.
Format of summary is described in
.BR pkg_summary(5) .
Fields are PKGPATH, PKGNAME, DEPENDS, MAINTAINER
and so on, actually anything present in input.
In addition to fields really present in input two artificial fields
are supported: PKGBASE and PKGPATHe. PKGBASE
is a PKGNAME with package version stripped. PKGPATHe (enriched PKGPATH)
is PKGPATH with ASSIGNMENTS
(if present) separated by colon symbol.
One may think that
.B pkg_grep_summary
is a search tool somewhat similar to
.BR grep(1) ", " PKGSRCDIR/pkglocate ", " pkgfind
etc. but it is different. Unlike 
.B grep(1)
.B pkg_grep_summary
uses a summary for one package instead of line of text as a basic element.
Unlike
.B pkgfind
it doesn't scan pkgsrc source and therefore works drammatically faster.
.SH OPTIONS
.TP
.B "-h|--help"
display help message
.TP
.BI "-e" " field"
outputs summaries in which
.I "field"
is either empty or absent
.TP
.BI "-m" " field regexp"
outputs summary if
.I "regexp"
matches the
.I "field"
.TP
.BI "-s" " field string"
outputs summary if
.I "field"
is equal to
.I "string"
.TP
.BI "-S" " field filename"
reads strings from
.IR filename ,
one string per line, and outputs summary given on stdin if
.I "field"
is equal to one of read strings.
.SH EXAMPLES
.VB
pkg_grep_summary -s PKGPATH 'devel/libjudy'

pkg_grep_summary -m PKGPATH '^wip/'

pkg_info -Xa | pkg_grep_summary SIZE_PKG 'fvalue+0 > 100000000'

pkg_grep_summary PKGNAME 'fvalue ~ /judy/' \\
      < /usr/pkgsrc/packages/pkg_summary.txt

pkg_grep_summary PKGPATH 'fvalue ~ /^lang\\//' \\
      < /usr/pkgsrc/packages/pkg_summary.txt

pkg_grep_summary DEPENDS 'fvalue ~ /libX11/' \\
      < /usr/pkgsrc/pkg_src_summary.txt

pkg_grep_summary COMMENT 'toupper(fvalue) ~ /DNS/' \\
      < /usr/pkgsrc/pkg_src_summary.txt

pkg_info -QPKGPATH -a > /tmp/wanted_pkgpaths.txt
pkg_grep_summary -S PKGPATH /tmp/wanted_pkgpaths.txt \\
      < /usr/pkgsrc/packages/pkg_summary.txt
.VE
.SH SEE ALSO
.BR pkg_summary-utils(7),
.BR pkg_summary(5)
.BR pkg_src_summary(1)
.SH AUTHOR
Aleksey Cheusov <vle@gmx.net>
