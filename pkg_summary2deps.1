\.\"	$NetBSD$
.\"
.\" Copyright (c) 2008-2010 by Aleksey Cheusov (cheusov@tut.by)
.\" Absolutely no warranty.
.\"
.\" ------------------------------------------------------------------
.de VB \" Verbatim Begin
.ft CW
.nf
.ne \\$1
..
.de VE \" Verbatim End
.ft R
.fi
..
.\" ------------------------------------------------------------------
.TH PKG_SUMMARY2DEPS 1 "Nov 18, 2010" "" ""
.SH NAME
.B pkg_summary2deps
extract dependencies from a package summary
.SH SYNOPSIS
.BI pkg_summary2deps " [OPTIONS] [files...]"
.SH DESCRIPTION
.B pkg_summary2deps
extracts dependencies from a package summary analysing
{alter,native}pkgbase:../../pkg/pkgpath and
pkgbase:/../../pkg/path entries in DEPENDS and
BUILD_DEPENDS fields.
Format of the output:
.VB

   package2 package3
   package1
   ...

.VE
Here package1 has no dependencies and package3 depends on package2.
.P
If multiple packages satisfy the condition, the package with highest
version is selected unless
.I -a
option was specified.
.SH OPTIONS
.TP
.B "-h"
display help message.
.TP
.B "-p"
output PKGPATH.
.TP
.B "-n"
output PKGNAME.
.TP
.B "-d"
analyse DEPENDS field. Missed alternative dependencies are
output as altdep1|altdep2|...|altdepN. The same is applied for
.IR "-D" .
.TP
.B "-D"
analyse BUILD_DEPENDS.
.TP
.B "-c"
analyse CONFLICTS and output problems to stderr.
Versions in CONFLICTS are always checked (see "-s").
.TP
.B "-A"
analyse both DEPENDS and BUILD_DEPENDS.
.TP
.B "-a"
output all matched dependencies separated by `|' symbol.
.TP
.B "-s"
enable strict mode. Versions of dependencies are always checked, even
if there is only one matched (by PKGBASE) package.
.TP
.B "-t"
produce output compatible with
.B tsort(1)
command
.TP
.B "-r"
do not strip versions from PKGNAME and imply "-n"
.TP
.B "-R"
do not strip versions from dependencies and imply "-n"
.TP
.B "-l"
output to stderr the error messages
compatible with pkg_lint_summary, e.g.,
.VB
d: not_found foo-[0-9]*:../../devel/foo <- lang/bar bar
.VE
.TP
.BI "-P " "<pkgpaths>"
find dependencies for specified PKGPATHs.
If
.I pkgpaths
starts with `/' or `.', it is treated as a
filename that contains PKGPATHs, one per line. Otherwise
.I pkgpaths
contains a list of PKGPATHs separated by space or comma.
.TP
.BI "-N " "<pkgnames>"
find dependencies for specified PKGNAMEs.
If
.I pkgnames
starts with `/' or `.', it is treated as a
filename that contains PKGNAMEs, one per line. Otherwise
.I pkgnames
contains a list of PKGNAMEs separated by space or comma.
.TP
.B "-X"
exit with non-zero exit status if missed
DEPENDS, BUILD_DEPENDS or CONFLICTS were found.
.SH ""
If both "-p" and "-n" are applied,
.B pkg_summary2deps
will output
.br
PKGPATH;PKGNAME. Either "-n" or "-p" must be applied.
Also either "-d", "-D", "-A" or "-c" must be applied.
.SH EXAMPLES
.VB
pkg_list_all_pkgs | pkg_src_summary | pkg_summary2deps -Ap
pkg_src_summary -A wip/distbb | pkg_summary2deps -ApRr
pkg_summary2deps -cl bin_summary.txt
.VE
.SH SEE ALSO
.BR pkg_summary-utils(7) ,
.BR pkg_summary(5) ,
.BR pkg_src_summary(1) ,
.BR pkg_lint_summary(1) ,
.BR tsort(1)
.SH AUTHOR
Aleksey Cheusov <vle@gmx.net>
