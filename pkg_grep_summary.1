.\"	$NetBSD$
.\"
.\" Copyright (c) 2008-2010 by Aleksey Cheusov (vle@gmx.net)
.\" Absolutely no warranty.
.\"
.\" ------------------------------------------------------------------
.de VB \" Verbatim Begin
.ft CW
.nf
.ne \\$1
..
.de VE \" Verbatim End
.ft R
.fi
..
.\" ------------------------------------------------------------------
.TH PKG_GREP_SUMMARY 1 "Jan 29, 2008" "" ""
.SH NAME
pkg_grep_summary \- tool for grepping pkgsrc summary file
.SH SYNOPSIS
.BI "pkg_grep_summary -h"
.br
.BI "pkg_grep_summary [option]" " field awk_expression"
.br
.BI "pkg_grep_summary [option] -e " field
.br
.BI "pkg_grep_summary [option] -m" " field regexp"
.br
.BI "pkg_grep_summary [option] -s" " field string"
.br
.BI "pkg_grep_summary [option] -S" " field filename"
.br
.BI "pkg_grep_summary [option] -t" " strategy field condition"
.br
.BI "pkg_grep_summary -T"
.br
.SH DESCRIPTION
.B pkg_grep_summary
takes package summaries on stdin and
outputs those matching the specified condition.
Format of summary is described in
.BR pkg_summary(5) .
Fields are PKGPATH, PKGNAME, DEPENDS, MAINTAINER
and so on, actually anything separated by 
.B =
sign.
In addition to fields really present on input a few artificial fields
are supported: PKGBASE, PKGPATHe, PKGPAIR, PKGPABA and PKGPANA. PKGBASE
is a PKGNAME with package version stripped. PKGPATHe (enriched PKGPATH)
is PKGPATH with ASSIGNMENTS
(if present) separated by colon symbol, for example,
.IR lang/py-psyco:PYTHON_VERSION_REQD=25 .
PKGPAIR is a PKGPATH and PKGBASE separated by comma character, for example,
.IR net/dhisd,dhisd .
PKGPABA is a synonym for PKGPAIR. PKGPANA is
a PKGPATH and PKGNAME separated by
comma, for example textproc/dict-server,dict-server-1.11.2.
.B pkg_grep_summary
is a search tool somewhat similar to
.BR grep(1) ", " PKGSRCDIR/pkglocate ", " pkgfind
and others. Unlike 
.B grep(1)
it uses summary information about one package instead of line of text
as an indivisible block of text.  Unlike
.BR pkgfind " and " PKGSRCDIR/pkglocate
it doesn't scan pkgsrc source tree.
For scanning pkgsrc source tree you may use
.BR pkg_src_summary(1) " or " pkg_micro_src_summary(1) .
The following variables can be used in
.IR awk_expression ": "
"fname"
(field name to check),
"fvalue"
(part of line after = sign) and associative array
"fields"
mapping field names to values which is available only if 
.I field
is `.' (single dot).
.SH OPTIONS
.TP
.B "-h"
display help message.
.TP
.B "-i"
ignore case. Before matching
.I field
is converted to lower case.
.TP
.B "-v"
invert the sense of matching to select non-matching summaries.
.TP
.B "-r"
exit status is non-zero if no matches were found.
.TP
.B "-R"
option
.B -r
is implied and "No matches found" is output to stderr.
.TP
.BI "-f" " fields"
a list of fields to output, by default the whole package summary is output.
.TP
.BI "-e" " field"
outputs summaries in which
.I "field"
is either empty or absent.
.TP
.BI "-m" " field regexp"
outputs summary if
.I "regexp"
matches
.I "field"
.TP
.BI "-s" " field string"
outputs summary if
.I "field"
is equal to
.I "string"
.TP
.BI "-S" " field filename"
reads strings from
.IR filename ,
one string per line, and outputs summary given on stdin if
.I "field"
is equal to one of read strings.
.TP
.BI "-t" " strategy field condition"
outputs summary if
.I condition
matches
.I field
according to search strategy
.IR strategy .
Available search strategies are:
.IR exact ", " prefix ", " suffix ", " substring ", " word ", "
.IR first ", " last ", " re ", " strfile ", " strlist ", " awk ", " kw
.RI " (" keywords ") and " empty .
Search strategy 
.I re
is for matching using regexp (ERE).
Search strategies
.IR first ", " last " and " word
are for matching first, last or any separate word within 
.IR field .
With
.IR kw " (" keywords ")"
.I condition
is treated as a list of words each of which should present in
.IR field .
With
search strategy
.IR strlist ", " condition
is treated as a list of words at least one of which should present in
.IR field .
.TP
.B "-T"
display all search strategies available for
.B -t
and exits. Doubled
.I -T
will show search strategies with their descriptions separated by TAB character.
.SH NOTES
.IR "-t exact <field> <string>" " and " "-s <field> <string>" " are equivalents"
.br
.IR "-t re <field> <regexp>" " and " "-m <field> <regexp>" " are equivalents"
.br
.IR "-t strfile <field> <filename>" " and " "-S <field> <filename>" " are equivalents"
.br
.IR "-t awk <field> <awk_expr>" " and " "<field> <awk_expr>" " are equivalents"
.br
.IR "-t empty <field> ''" " and " "-e <field>" " are equivalents"
.SH EXAMPLES
.VB
pkg_grep_summary -s PKGPATH 'devel/libjudy'

pkg_grep_summary -m PKGPATH '^wip/'

pkg_info -Xa | pkg_grep_summary SIZE_PKG 'fvalue+0 > 100000000'

pkg_grep_summary PKGNAME 'fvalue ~ /judy/' \\
      < /usr/pkgsrc/packages/pkg_summary.txt

pkg_grep_summary PKGPATH 'fvalue ~ /^lang\\//' \\
      < /usr/pkgsrc/packages/pkg_summary.txt

pkg_grep_summary DEPENDS 'fvalue ~ /libX11/' \\
      < /usr/pkgsrc/pkg_src_summary.txt

pkg_grep_summary COMMENT 'toupper(fvalue) ~ /DNS/' \\
      < /usr/pkgsrc/pkg_src_summary.txt

pkg_info -QPKGPATH -a > /tmp/wanted_pkgpaths.txt
pkg_grep_summary -S PKGPATH /tmp/wanted_pkgpaths.txt \\
      < /usr/pkgsrc/packages/pkg_summary.txt

pkg_grep_summary -t word COMMENT DNS \\
      < /usr/pkgsrc/pkg_src_summary.txt

pkg_bin_summary -f PKGNAME,automatic,REQUIREDBY |
pkg_grep_summary . 'fields ["automatic"] == "yes" &&
                    fields ["REQUIREDBY"] == ""'

pkg_grep_summary -i -t kw COMMENT 'dns server' \\
      < /usr/pkgsrc/packages/pkg_summary.txt

pkg_grep_summary -t strlist MAINAINER 'cheusov@tut.by vle@gmx.net' \\
      < /usr/pkgsrc/packages/pkg_summary.txt
.VE
.SH SEE ALSO
.BR pkg_summary-utils(7),
.BR pkg_summary(5)
.BR pkg_src_summary(1)
.BR pkg_micro_src_summary(1)
.BR pkg_info(1)
.SH AUTHOR
Aleksey Cheusov <vle@gmx.net>
